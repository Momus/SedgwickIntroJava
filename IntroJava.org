#+PROPERTY: header-args:sh :var ARGS="-Dexec.args" :results verbatim

* Setup
*** Project Generation
    #+BEGIN_SRC sh :dir .
      mvn archetype:generate -DgroupId=org.momus -DartifactId=SedgwickIntro
    #+END_SRC
*** Run your class with arguments
******* Run your class with agruments:
	- mvn -X -e exec:java -Dexec.mainClass=org.momus.algorithms.EuclidsGCD  -Dexec.args="340 1200"
	- -X adds logs of dubugging information.
* Chapter 1
*** Hello World!
    Got Maven working, and maybe even Eclim, we will see. At least now
    I should have no distractions from the actual java. This secion
    can be used as a template.
***** Write it!
      #+BEGIN_SRC java :tangle src/main/java/org/momus/HelloWorld.java
        package org.momus;

        public class HelloWorld {

            public static String greeting(String[] names) {
                String name = "";
                name = (names.length > 0) ? names[0] : "World";
                return "Hello, " + name + "!";
            }


            public static void main(String[] args){
                System.out.println( greeting(args) );
            }

        }
      #+END_SRC
***** Run it!
      #+HEADER: :var MAVENEXEC="mvn exec:java -Dexec.mainClass=org.momus.HelloWorld"
      #+BEGIN_SRC sh 
        #$MAVENEXEC | grep -v INFO
        $MAVENEXEC | grep -v INFO
        $MAVENEXEC $ARGS="Emy" | grep -v INFO
        $MAVENEXEC $ARGS="Emily Bishton" | grep -v INFO
      #+END_SRC

      #+RESULTS:
      : Hello, World!
      : Hello, Emy!
      : Hello, Emily!
***** Test it!
******* Write the tests.
        #+BEGIN_SRC java :tangle ./src/test/java/org/momus/HelloWorldTest.java
          package org.momus;

          import junit.framework.Test;
          import junit.framework.TestCase;
          import junit.framework.TestSuite;

          /**
           ,* Unit test for simple App.
           ,*/
          public class HelloWorldTest 
              extends TestCase
          {

              /**
               ,* Rigourous Test :-)
               ,*/
              public void testHelloWorld()
              {
                  String[] Emy = {"Emy"};
                  String[] FullName = { "Emily", "Bishton"};
                  String[] Empty = {};
        
                  assertEquals( "Emy!", "Hello, Emy!", HelloWorld.greeting(Emy));
                  assertEquals( "Say hi to everyone", "Hello, World!", HelloWorld.greeting(Empty));
                  assertEquals( "Ignore surnames" , "Hello, Emily!", HelloWorld.greeting(FullName));
              }
          }
        #+END_SRC
******* Run the tests
        #+BEGIN_SRC sh
          mvn test | grep -v INFO
        #+END_SRC

        #+RESULTS:
        #+begin_example
        [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
        [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!

        -------------------------------------------------------
         T E S T S
        -------------------------------------------------------
        Running org.momus.AppTest
        Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
        Running org.momus.HelloWorldTest
        Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec

        Results :

        Tests run: 2, Failures: 0, Errors: 0, Skipped: 0

        #+end_example


  
  
